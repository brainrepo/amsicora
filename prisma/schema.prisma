// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String                 @id @default(uuid())
  createdAt            DateTime               @default(now())
  email                String                 @unique
  name                 String?
  password             String                 @default("")
  role                 Role                   @default(CUSTOMER)
  ownedServices        Service[]              @relation(name: "SupplierToService")
  sellableServices     Service[]              @relation(name: "SellerToService")
  resourceAmounts      ResourceAmount[]       @relation(name: "ResourceAmountToSeller")
  resourceId           String?
  resourceAmountLocker ResourceAmountLocker[]
}

model Service {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  published Boolean    @default(false)
  name      String     @db.VarChar(255)
  owner     User?      @relation(fields: [ownerId], references: [id], name: "SupplierToService")
  ownerId   String?
  sellers   User[]     @relation(name: "SellerToService")
  shifts    Shift[]
  variants  Variant[]
  resources Resource[]
}

model Shift {
  id             String           @id @default(uuid())
  name           String           @db.VarChar(255)
  service        Service          @relation(fields: [serviceId], references: [id])
  serviceId      String
  time           DateTime?        @db.Timetz()
  resourceAmount ResourceAmount[]
}

model Variant {
  id        String     @id @default(uuid())
  name      String     @db.VarChar(255)
  service   Service    @relation(fields: [serviceId], references: [id])
  serviceId String
  limit     Int        @default(10)
  resources Resource[]
}

model Resource {
  id             String           @id @default(uuid())
  name           String           @db.VarChar(255)
  service        Service          @relation(fields: [serviceId], references: [id])
  serviceId      String
  variants       Variant[]
  limit          Int
  resourceAmount ResourceAmount[]
}

model ResourceAmount {
  id                   String                 @id @default(uuid())
  amount               Int                    @default(0)
  date                 DateTime               @db.Date
  shift                Shift                  @relation(fields: [shiftId], references: [id])
  shiftId              String
  elapseDate           DateTime               @db.Timestamptz()
  resource             Resource               @relation(fields: [resourceId], references: [id])
  resourceId           String
  isAllotment          Boolean                @default(false)
  priority             Int                    @default(100)
  sellers              User[]                 @relation(name: "ResourceAmountToSeller")
  resourceAmountLocker ResourceAmountLocker[]
}

model ResourceAmountLocker {
  id               String         @id @default(uuid())
  amount           Int            @default(0)
  reservationId    String
  resourceAmount   ResourceAmount @relation(fields: [resourceAmountId], references: [id])
  resourceAmountId String
  seller           User           @relation(fields: [sellerId], references: [id])
  sellerId         String
}

enum Role {
  SUPPLIER
  SELLER
  CUSTOMER
}
